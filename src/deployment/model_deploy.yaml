# PIPELINE DEFINITION
# Name: model-deploy-pipeline
components:
  comp-model-deploy:
    executorLabel: exec-model-deploy
deploymentSpec:
  executors:
    exec-model-deploy:
      taskSpec:
        parameterValues:
          script: |
            from kfp import dsl

            @dsl.component
            def model_deploy(
                project: str = "",
                bucket_name: str = "",
                display_name: str = "",
            ):
                from google.cloud import aiplatform as aip

                # Initialize Vertex AI SDK for Python
                aip.init(project=project)

                # Model details
                artifact_uri = f"gs://{bucket_name}/model"
                serving_container_image_uri = "us-docker.pkg.dev/vertex-ai/prediction/tf2-cpu.2-12:latest"

                # Upload and deploy the model
                model = aip.Model.upload(
                    display_name=display_name,
                    artifact_uri=artifact_uri,
                    serving_container_image_uri=serving_container_image_uri,
                )

                # Deploy to endpoint
                endpoint = model.deploy(
                    deployed_model_display_name=display_name,
                    machine_type="n1-standard-4",
                    min_replica_count=1,
                    max_replica_count=1,
                    traffic_split={"0": 100},
                )
pipelineInfo:
  name: model-deploy-pipeline
root:
  dag:
    tasks:
      model-deploy:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-model-deploy
        taskInfo:
          name: model-deploy
schemaVersion: 2.1.0
sdkVersion: kfp-2.4.0


